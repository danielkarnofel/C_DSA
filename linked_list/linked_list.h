#ifndef LINKED_LIST_H
#define LINKED_LIST_H

#include <stdbool.h>

typedef int Element;
typedef struct linked_list_t *LinkedList;

/**********************************************************
 * ll_create: 
 **********************************************************/
LinkedList ll_create();

/**********************************************************
 * ll_destroy: 
 **********************************************************/
void ll_destroy(LinkedList list);

/**********************************************************
 * ll_add: 
 **********************************************************/
bool ll_add(LinkedList list, int index, Element e);

/**********************************************************
 * ll_remove:
 **********************************************************/
Element ll_remove(LinkedList list, int index);

/**********************************************************
 * ll_set:
 **********************************************************/
Element ll_set(LinkedList list, int index, Element e);

/**********************************************************
 * ll_get:
 **********************************************************/
Element ll_get(LinkedList list, int index);

/**********************************************************
 * ll_index_of:
 **********************************************************/
int ll_index_of(LinkedList list, Element e);

/**********************************************************
 * ll_size:
 **********************************************************/
int ll_size(LinkedList list);

/**********************************************************
 * ll_is_empty:
 **********************************************************/
bool ll_is_empty(LinkedList list);

/**********************************************************
 * ll_clear:
 **********************************************************/
void ll_clear(LinkedList list);

/**********************************************************
 * ll_print:
 **********************************************************/
void ll_print(LinkedList list);

#endif