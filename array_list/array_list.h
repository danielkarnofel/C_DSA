#ifndef ARRAY_LIST_H
#define ARRAY_LIST_H

#include <stdbool.h>

typedef int Element;
typedef struct array_list_t *ArrayList;

/**********************************************************
 * create: 
 **********************************************************/
ArrayList create(int initial_capacity);

/**********************************************************
 * destroy: 
 **********************************************************/
void destroy(ArrayList list);

/**********************************************************
 * add: 
 **********************************************************/
bool add_to_list(ArrayList list, int index, Element e);

/**********************************************************
 * remove:
 **********************************************************/
Element remove_from_list(ArrayList list, int index);

/**********************************************************
 * set:
 **********************************************************/
Element set(ArrayList list, int index, Element e);

/**********************************************************
 * get:
 **********************************************************/
Element get(ArrayList list, int index);

/**********************************************************
 * get_index:
 **********************************************************/
int get_index(ArrayList list, Element e);

/**********************************************************
 * size:
 **********************************************************/
int size(ArrayList list);

/**********************************************************
 * is_empty:
 **********************************************************/
bool is_empty(ArrayList list);

/**********************************************************
 * clear:
 **********************************************************/
void clear(ArrayList list);

/**********************************************************
 * print_list:
 **********************************************************/
void print_list(ArrayList list);

#endif